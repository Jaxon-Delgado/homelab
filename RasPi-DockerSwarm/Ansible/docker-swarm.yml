---
- name: Setup Docker and join Docker Swarm
  hosts: pis
  become: yes
  tasks:
    - name: Update apt cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install prerequisite packages
      apt: 
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
    
    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/GPG
        state: present
    
    - name: Add Docker apt repository
      apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker packages
      apt: 
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Enable and start Docker service
      systemd: 
        name: docker
        enabled: yes
        state: started

- name: Initialize Docker Swarm
  hosts: manager
  become: yes
  vars:
    swarm_manager_ip: "your_swarm_manager_ip" # CHANGE THIS
  tasks:
    - name: Initialize Swarm
      command: docker swarm init --advertise-addr {{ swarm_manager_ip }}
      register: swarm_init
      failed_when: >
        swarm_init.rc !=0 and
        ('This node is already part of a swarm' not in swarm_init.stderr)
      changed_when: "'Swarm initialized' in (swarm_init.stdout | default(''))"

- name: Join Docker Swarm as Worker
  hosts: pis
  become: yes
  vars: 
    manager_host: "{{ groups['swarm-manager'][0] }}"
    manager_ip: "{{ hostvars[manager_host].ansible_host }}"
  tasks: 
    - name: Get token from manager
      command: docker swarm join-token -q worker
      register: worker_token
      delegate_to: "{{ manager_host }}"
      run_once: true

    - name: Join swarm (safe re-run)
      command: "docker swarm join --token {{ worker_token.stdout }} {{ manager_ip }}:2377"
      register: join_result
      failed_when: >
        join_result.rc != 0 and
        ('This node is already part of a swarm' not in (join_result.stderr | default('')))
